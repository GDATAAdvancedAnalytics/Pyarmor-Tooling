diff --git a/Python/marshal.c b/Python/marshal.c
index 29f3bab..92a0a98 100644
--- a/Python/marshal.c
+++ b/Python/marshal.c
@@ -674,6 +674,7 @@ typedef struct {
     char *buf;
     Py_ssize_t buf_size;
     PyObject *refs;  /* a list */
+    int armor;
 } RFILE;
 
 static const char *
@@ -1467,6 +1468,14 @@ r_object(RFILE *p)
 
             v = r_ref_insert(v, idx, flag, p);
 
+            if (p->armor == 1) {
+                int somelen = r_byte(p);
+                if (somelen) {
+                    const char *somestr = r_string(somelen, p);
+                    printf("Got extra data of length %d\n", somelen);
+                }
+            }
+
           code_error:
             if (v == NULL && !PyErr_Occurred()) {
                 PyErr_SetString(PyExc_TypeError,
@@ -1548,6 +1557,7 @@ PyMarshal_ReadShortFromFile(FILE *fp)
     rf.fp = fp;
     rf.end = rf.ptr = NULL;
     rf.buf = NULL;
+    rf.armor = 0;
     res = r_short(&rf);
     if (rf.buf != NULL)
         PyMem_Free(rf.buf);
@@ -1563,6 +1573,7 @@ PyMarshal_ReadLongFromFile(FILE *fp)
     rf.readable = NULL;
     rf.ptr = rf.end = NULL;
     rf.buf = NULL;
+    rf.armor = 0;
     res = r_long(&rf);
     if (rf.buf != NULL)
         PyMem_Free(rf.buf);
@@ -1625,6 +1636,7 @@ PyMarshal_ReadObjectFromFile(FILE *fp)
     rf.depth = 0;
     rf.ptr = rf.end = NULL;
     rf.buf = NULL;
+    rf.armor = 0;
     rf.refs = PyList_New(0);
     if (rf.refs == NULL)
         return NULL;
@@ -1646,6 +1658,7 @@ PyMarshal_ReadObjectFromString(const char *str, Py_ssize_t len)
     rf.end = str + len;
     rf.buf = NULL;
     rf.depth = 0;
+    rf.armor = 0;
     rf.refs = PyList_New(0);
     if (rf.refs == NULL)
         return NULL;
@@ -1778,6 +1791,7 @@ marshal_load(PyObject *module, PyObject *file)
         rf.readable = file;
         rf.ptr = rf.end = NULL;
         rf.buf = NULL;
+        rf.armor = 1;
         if ((rf.refs = PyList_New(0)) != NULL) {
             result = read_object(&rf);
             Py_DECREF(rf.refs);
@@ -1837,6 +1851,7 @@ marshal_loads_impl(PyObject *module, Py_buffer *bytes)
     rf.ptr = s;
     rf.end = s + n;
     rf.depth = 0;
+    rf.armor = 0;
     if ((rf.refs = PyList_New(0)) == NULL)
         return NULL;
     result = read_object(&rf);
